class Generator(object):
    def __init__(self, params):
        return
    def __iter__(self):
''' *** Compositional Generators *** '''
    
'''
Compositional generators are generators that provide the functionality
of splitting up the world into some set X such that \forall x \in X. 
x \subseteq world. This generator is composed with a different generator
that transforms x \in X to some context.
'''

class PointFaceGenerator(Generator):
    '''
    A point-face generator. Generates the set X such that
    
    X = \{x | x \in particles(world)\} \times \{x | x \in faces(world)\}
    '''
    